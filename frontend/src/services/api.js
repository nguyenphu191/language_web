import axios from 'axios';

// T·∫°o instance axios v·ªõi config c∆° b·∫£n
const API = axios.create({
  baseURL: 'http://localhost:5000/api',
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  },
});

// Request interceptor - t·ª± ƒë·ªông th√™m token
API.interceptors.request.use(
  (config) => {
    // L·∫•y token t·ª´ localStorage
    const token = localStorage.getItem('token');
    
    if (token) {
      // Th√™m Authorization header
      config.headers.Authorization = `Bearer ${token}`;
    }
    
    console.log('üöÄ API Request:', config.method?.toUpperCase(), config.url);
    return config;
  },
  (error) => {
    console.error('‚ùå Request Error:', error);
    return Promise.reject(error);
  }
);

// Response interceptor - x·ª≠ l√Ω response v√† l·ªói
API.interceptors.response.use(
  (response) => {
    console.log('‚úÖ API Response:', response.status, response.config.url);
    return response;
  },
  (error) => {
    console.error('‚ùå API Error:', error.response?.status, error.message);
    
    // N·∫øu token h·∫øt h·∫°n (401), x√≥a token v√† reload
    if (error.response?.status === 401) {
      localStorage.removeItem('token');
      
      if (!window.location.pathname.includes('/login') && 
          !window.location.pathname.includes('/register')) {
        window.location.href = '/login';
      }
    }
    
    return Promise.reject(error);
  }
);

export default API;